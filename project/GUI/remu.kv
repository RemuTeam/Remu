RemuSM:
    id: screen_manager
    SwitchLayout:
        id: switch_layout
        manager: screen_manager

#
# SwitchLayout defines "Master" and "Slave" buttons for the user to set the user mode
#
<SwitchLayout>:
    name: 'switch_layout'
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "Choose master or slave"
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: "Master"
                size_hint: 0.3,0.3
                on_release: app.root.add_master_layout()
            Button:
                text: "Slave"
                size_hint: 0.3,0.3
                on_release: app.root.add_slave_layout()

#
# MasterGUILayout contains a options bar, a bottom bar and a main view. Upper bar contains connection control, lower bar
# displays connection status and main view contains the master view.
#
<MasterGUILayout>:
    id: master_gui_layout
    orientation: 'vertical'
    spacing: 10
    padding: 10

    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            id: options
            orientation: 'horizontal'
            size_hint: 1, 0.1
            Button:
                id: start_pres
                text: "Start presentation"
                on_press: root.start_presentation()
            Button:
                id: show_next
                text: "show next"
                on_press: root.send_message_to_slave()
            Button:
                text: "Back"
                on_press: root.show_master_back_popup()
            TextInput:
                id: txt_input
                text: ""
                hint_text: "0.0.0.0:8000"
            Button:
                text: "Add Slave"
                on_press: root.add_slave_connection(txt_input.text)
        StackLayout:
            id: middle
            spacing: 2
            orientation: 'tb-lr'
        BoxLayout:
            id: bottom_panel
            orientation: 'horizontal'
            size_hint: 1, 0.1
            Label:
                text: root.label_text

#
# SlaveGUILayout contains the waiting view for slave mode. When the presentation starts, slave device changes to
# presentation layout
#
<SlaveGUILayout>:
    orientation: 'vertical'
    spacing: 10
    padding: 10

    BoxLayout:
        orientation: 'vertical'
        Label:
            text: root.info_text
            font_size: 32
        BoxLayout:
            orientation: 'horizontal'
            Button:
                size_hint: 0.3,0.3
                text: "Go to presentation"
                on_press: root.init_presentation()
                on_press: app.root.change_screen_to("presentation_layout")
            Button:
                size_hint:0.3,0.3
                text: "Back"
                on_release: root.show_slave_back_popup()

#
# PresentationLayout controls the slave devices presentation view
#
<PresentationLayout>:
    BoxLayout:
        orientation: 'vertical'
        Image:
            id: picture
            source: root.image_source
        Label:
            id: text_field
            text: root.text_element
            text_size: self.size
            halign: 'center'
            valign: 'middle'
        Video:
            id: video
            source: root.video_source

#
# SlavePresentation represents a single slave of the master, with all of its visuals included
#
<SlavePresentation@BoxLayout>
    id: slave
    size_hint: 1, 0.15
    orientation: 'horizontal'
    Button:
        id: btn_address
        size_hint: 0.2, 1
        text: "Name of the slave"
        on_press: slave.slave.show_next()
    StackLayout:
        id: visuals
        orientation: 'lr-tb'
        spacing: 2
    Button:
        id: killswitch
        size_hint: 0.1, 1
        text: " Terminate \nconnection"
        on_press: slave.slave.terminate_connection()

#
# SlaveVisualProperty is the visual representation of slave's visual property. It inherits Button, so that
# it can be pressed to show more information about the property
#
<SlaveVisualProperty@Button>
    size_hint: 0.2, 1
    text: root.visual_name
    text_size: self.size
    halign: 'center'
    valign: 'middle'
    padding: (5, 2)


<MasterBackPopUp>:
    title: "Are you sure you want to go back?"
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "If you answer yes, the connection with all slaves will be lost."
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: "Yes"
                on_press: app.reset_servicemode()
                on_press: root.dismiss()
                on_release: app.root.rm_master_layout()
                size_hint: 0.3,0.3
            Button:
                text: "No"
                on_press: root.dismiss()
                size_hint: 0.3,0.3

<SlaveBackPopUp>:
    title: "Are you sure you want to go back?"
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "If you answer yes, the connection with master will be lost."
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: "Yes"
                on_press: app.reset_servicemode()
                on_press: root.dismiss()
                on_release: app.root.rm_slave_layout()
                size_hint: 0.3,0.3
            Button:
                text: "No"
                on_press: root.dismiss()
                size_hint: 0.3,0.3

#MasterBackPopUp : A popup that asks if master is sure they want to go back to the switch layout.
#If he presses yes, connection is broken and switching layout comes up, if he presses no, connection is not lost and we return to master layout

#SlaveBackPopUp : A popup that asks if slave is sure they want to go back to the switch layout.
#If he presses yes, connection is broken and switching layout comes up, if he presses no, connection is not lost and we return to slave layout