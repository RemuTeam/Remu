RemuSM:
    id: screen_manager
    SwitchLayout:
        id: switch_layout
        manager: screen_manager

#
# SwitchLayout defines "Master" and "Slave" buttons for the user to set the user mode
#
<SwitchLayout>:
    name: 'switch_layout'
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "Choose master or slave"
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: "Master"
                size_hint: 0.3,0.3
                on_release: root.goto_master_mode()
            Button:
                text: "Slave"
                size_hint: 0.3,0.3
                on_release: app.root.add_slave_layout()
            Button:
                text: "Info"
                size_hint:0.3,0.3
                on_release: app.root.add_info_layout()

<DraggablePresentationElement>:
    drag_rectangle: self.x, self.y, self.width, self.height
    drag_timeout: 10000000
    drag_distance: 0
    text_size: self.size
    halign: 'center'
    valign: 'middle'
    size_hint: 0.10, 1

<RobustPresentationEditView>:
    size_hint: 1, 0.15
    id: presentation_view
    StackLayout:
        id: presentation_elements
        size_hint: 0.95, 0.5
        spacing: 2
    Button:
        text: "Create Presentation"
        halign:'right'
        size_hint: 0.2, 0.5
        on_press: presentation_view.create_presentation()

<PresentationCreationLayout>:
    id: presentation_creation_layout
    orientation: 'vertical'
    StackLayout:
        id: views
        size_hint: 1, 0.9
    Button:
        id: newpres
        text: "Create a new presentation"
        size_hint: 1, 0.1
        on_press: presentation_creation_layout.create_a_new_presentation_to_edit()


#
# MasterGUILayout contains a options bar, a bottom bar and a main view. Upper bar contains connection control, lower bar
# displays connection status and main view contains the master view.
#
<MasterGUILayout>:
    id: master_gui_layout
    orientation: 'vertical'
    spacing: 10
    padding: 10

    StackLayout:
        orientation: 'tb-lr'
        BoxLayout:
            id: options
            orientation: 'horizontal'
            size_hint: 1, 0.1
            Button:
                id: start_pres
                disabled: root.presenting_disabled
                text: "Start\npresentation"
                on_press: root.start_presentation()
            Button:
                id: show_next
                text: "show next"
                on_press: root.request_next_element_from_all_slaves()
            Button:
                id: back_button
                text: "Back"
                on_press: root.show_master_back_popup()
            Button:
                id: stop_pres
                text: "Stop presentation"
                on_press: root.stop_presentation()
            Button:
                text: "Open files"
                on_press: root.show_open_file_popup()
            TextInput:
                id: txt_input
                text: ""
                on_text: root.check_text(self.text)
                hint_text: "Presentation Name"
            Button:
                id: new_presentation_button
                text: "New\npresentation"
                disabled: True
                on_press: root.create_new_presentation(txt_input.text)
            #    text: "Add Slave"
            #    on_press: root.add_slave_connection(txt_input.text)
            Button:
                id: remove_presentations_button
                text: "Remove\npresentations"
                on_release: root.show_remove_presentations_popup()
        ProjectOverview:
            id: project_overview
        BottomPanel:
            id: bottom_panel

<BottomPanel@BoxLayout>:
    orientation: 'horizontal'
    size_hint: 1, 0.1
    Button:
        id: save_project
        disabled: True
        text: "Save project"
        on_press: print("Juuh")
    Button:
        id: open_project
        text: "Open project"
        on_press: print("Juuh")


#
# SlaveGUILayout contains the waiting view for slave mode. When the presentation starts, slave device changes to
# presentation layout
#
<SlaveGUILayout>:
    orientation: 'vertical'
    spacing: 10
    padding: 10

    BoxLayout:
        orientation: 'vertical'
        Label:
            text: root.info_text
            font_size: 32
        BoxLayout:
            orientation: 'horizontal'
            Button:
                size_hint: 0.3,0.3
                text: "Go to presentation"
                on_press: root.init_presentation()
                on_press: app.root.change_screen_to("presentation_layout")
            Button:
                size_hint:0.3,0.3
                text: "Back"
                on_release: root.show_slave_back_popup()

#
# PresentationLayout controls the slave devices presentation view
#
<PresentationLayout>:
    BoxLayout:
        orientation: 'vertical'
        Image:
            id: picture
            source: root.image_source
        Label:
            id: text_field
            text: root.text_element
            text_size: self.size
            halign: 'center'
            valign: 'middle'
        Video:
            id: video
            source: root.video_source

#
# ProjectOverview is within the master's GUI, and contains the information about the slaves. It is divided into two parts,
# slave_names and slave_presentations, which show the names and presentations of the slaves respectively
#
<ProjectOverview>
    #do_scroll_x: False
    size_hint: 1, 0.8
    StackLayout:
        size_hint_y: None
        height: root.height
        orientation: 'lr-tb'
        StackLayout:
            id: slave_names
            size_hint: 1/6, 1
            padding: 0, 2, 0, 0
            orientation: 'lr-tb'
        ScrollView:
            id: scrollview
            do_scroll_y: False
            size_hint: 5/6, 1
            StackLayout:
                id: slave_presentations
                padding: 0,2,0,0
                size_hint_y: 1
                size_hint_x: None
                width: root.width

#
# SlavePresentation represents a single slave of the master, with all of its visuals included
#
<SlavePresentation>
    spacing: 5
    padding: 2, 0, 2, 2
    size_hint_y: 0.2
    orientation: 'lr-tb'

    #Button:
    #    id: killswitch
    #    size_hint: 0.1, 1
    #    text: " Terminate \nconnection"
    #    on_press: slave.slave.terminate_connection()

<SlaveInfo@Button>
    id: btn_address
    text: "Name of the slave"
    on_press: slave.slave.show_next()

#
# SlaveVisualProperty is the visual representation of slave's visual property. It inherits Button, so that
# it can be pressed to show more information about the property.
#
<SlaveVisualProperty>
    drag_rectangle: self.x, self.y, self.width, self.height
    drag_timeout: 10000000
    drag_distance: 0
    #size_hint: 0.2, 1
    text: root.visual_name
    text_size: self.size
    halign: 'center'
    valign: 'middle'
    #padding: (0, 1)

<InfoLayout>:
    id:info_gui_layout
    StackLayout:
        orientation: 'tb-lr'
        StackLayout:
            size_hint: 1, 0.9
            Label:
                padding_left: 5
                text: root.text
                valign: 'middle'
        Button:
            size_hint_y: 0.1
            size_hint_x: 0.1
            text: "Back"
            on_press: app.root.change_screen_to("switch_layout")


<MasterBackPopUp>:
    title: "Are you sure you want to go back?"
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "If you answer yes, the connection with all slaves will be lost."
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: "Yes"
                on_press: app.reset_servicemode()
                on_press: root.dismiss()
                on_release: app.root.rm_master_layout()
                size_hint: 0.3,0.3
            Button:
                text: "No"
                on_press: root.dismiss()
                size_hint: 0.3,0.3

<SlaveBackPopUp>:
    title: "Are you sure you want to go back?"
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "If you answer yes, the connection with master will be lost."
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: "Yes"
                on_press: app.reset_servicemode()
                on_press: root.dismiss()
                on_release: app.root.rm_slave_layout()
                size_hint: 0.3,0.3
            Button:
                text: "No"
                on_press: root.dismiss()
                size_hint: 0.3,0.3

#
#RemovePresentationsPopUp  is a popup that master can open to select presentations for removal
#
<RemovePresentationsPopUp>:
    title: "Select presentations you want removed"
    BoxLayout:
        orientation:'vertical'
        BoxLayout:
            orientation:'vertical'
            id: presentation_list
        BoxLayout:
            orientation:'horizontal'
            Button:
                text: "Confirm"
                size_hint: 0.1,0.2
                on_release:root.inform_listener()
                on_release:root.dismiss()
            Button:
                text: "Cancel and go back"
                size_hint: 0.1,0.2
                on_press: root.dismiss()


<BindPresentationToSlavePopUp>:
    title: "Select a slave for the presentation"
    BoxLayout:
        orientation:'vertical'
        BoxLayout:
            orientation:'vertical'
            id: slave_connection_list
        BoxLayout:
            orientation:'horizontal'
            Button:
                text: "Confirm"
                size_hint: 0.1, 0.2
                on_release:root.confirm()
                on_release:root.dismiss()
            Button:
                text: "Cancel and go back"
                size_hint: 0.1, 0.2
                on_press: root.dismiss()


#
# ImportFilesPopUp is a popup for file importing interaction
#
<ImportFilesPopUp>:


<FileHandlerPopUp>:
    title: root.title
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "horizontal"
        BoxLayout:
            size_hint: 0.7, 1
            orientation: "vertical"
            BoxLayout:
                size_hint: 1, 0.1
                orientation: "horizontal"
                Label:
                    size_hint: 0.25, 1
                    text: "Current directory:"
                Label:
                    text: filechooser.path
                    text_size: self.size
                    halign: "left"
                    valign: "middle"
            FileChooserIconView:
                id: filechooser
                multiselect: root.multiselect   # allows selection of multiple files
                path: root.default_path     # the default path to open
                filters: root.filters  # filters the files to show

            BoxLayout:
                size_hint_y: None
                height: 30
                Button:
                    text: "Cancel"
                    on_release: root.dismiss()
                Button:
                    id: callback_button
                    disabled: True
                    text: root.button_text
                    on_release: root.exit_callback(filechooser.path, filechooser.selection)
                    on_release: root.dismiss()
        StackLayout:
            orientation: "tb-lr"
            size_hint: 0.3, 1
            Label:
                size_hint: 1, 0.1
                text: "Import files to:"
            ScrollView:
                size_hint: 1, 0.9
                StackLayout:
                    id: presentation_list
                    orientation: 'tb-lr'
                    size_hint_y: None
                    size_hint_x: 1
                    height: root.height
                    width: root.width

<CheckBoxBonanza@BoxLayout>:
    CheckBox:
        id: checker
        size_hint: 0.2, 1
        label: root.presentation_name
    Label:
        id: p_name
        size_hint: 0.8, 1
        text: root.presentation_name

#
# FileSavingDialogPopUp asks for input when file already exists
# in the media folder.
#
<FileSavingDialogPopUp>:
    title: "The file already exists"
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        Label:
            text: "The file " + root.original_destination_filename_only + " already exists in the media folder. What do you want to do?"
        BoxLayout:
            orientation: "horizontal"
            Label:
                text: "Save copy as:"
            TextInput:
                id: save_as
                multiline: False
                height: self.minimum_height
                text: root.new_filename     # the prefilled filename
        BoxLayout:
            orientation: "horizontal"
            Button:
                text: "Import from media"
                on_release: root.dismiss()
            Button:
                text: "Replace file"
                on_release: root.replace_file()
                on_release: root.dismiss()
            Button:
                id: copy_file_button
                text: "Copy file"
                on_release: root.create_new_file()
                on_release: root.dismiss()

#
# Alerts the user for an exception during runtime
#
<ExceptionAlertPopUp>:
    title: root.error_title
    BoxLayout:
        orientation: "vertical"
        Label:
            text: root.error_msg
            text_size: self.size
            halign: "center"
            valign: "middle"
        Button:
            text: "Ok"
            on_release: root.dismiss()



#MasterBackPopUp : A popup that asks if master is sure they want to go back to the switch layout.
#If he presses yes, connection is broken and switching layout comes up, if he presses no, connection is not lost and we return to master layout

#SlaveBackPopUp : A popup that asks if slave is sure they want to go back to the switch layout.
#If he presses yes, connection is broken and switching layout comes up, if he presses no, connection is not lost and we return to slave layout

# USE THIS FOR GUI DEBUG
# This widget overrides the default Widget, and draws lines on all of the widgets.
#<Widget>:
#    canvas.after:
#        Line:
#            rectangle: self.x+1,self.y+1,self.width-1,self.height-1
#            dash_offset: 5
#            dash_length: